# 1. Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление.
# Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.

def divide_numbers(a, b):
    try:
        return a / b
    except ZeroDivisionError:
        return "Деление на ноль невозможно."


# Запрос чисел у пользователя
a = float(input("Введите первое число: "))
b = float(input("Введите второе число: "))

# Выполнение деления с учетом возможного исключения
result = divide_numbers(a, b)
print("Результат: ", result)


# 2. Реализовать функцию, принимающую несколько параметров, описывающих данные пользователя:
# имя, фамилия, год рождения, город проживания, email, телефон. Функция должна принимать параметры
# как именованные аргументы. Реализовать вывод данных о пользователе одной строкой.

def print_user_info(name, surname, birth_year, city, email, phone):
    user_info = f"Имя: {name}, Фамилия: {surname}, Год рождения: {birth_year}, Город проживания: {city}, Email: {email}, Телефон: {phone}"
    print(user_info)


print_user_info(
    name="Иван",
    surname="Иванов",
    birth_year=1990,
    city="Москва",
    email="ivanov@example.com",
    phone="89001234567"
)


# 3. Реализовать функцию my_func(), которая принимает три позиционных аргумента,
# и возвращает сумму наибольших двух аргументов.

def my_func(a, b, c):
    # Сортировка аргументов и выбор двух наибольших
    return sum(sorted([a, b, c], reverse=True)[:2])


result = my_func(5, 1, 8)
print("Сумма наибольших двух аргументов:", result)


# 4.Программа принимает действительное положительное число x и целое отрицательное число y.
# Необходимо выполнить возведение числа x в степень y.
# Задание необходимо реализовать в виде функции my_func(x, y).
# При решении задания необходимо обойтись без встроенной функции возведения числа в степень.

def my_func(x, y):
    if x <= 0 or y >= 0:
        return "Функция принимает действительное положительное число x и целое отрицательное число y."
    result = 1
    for _ in range(abs(y)):
        result *= x
    return 1 / result


x = float(input("Введите действительное положительное число x: "))
y = int(input("Введите целое отрицательное число y: "))

print("Результат возведения x в степень y:", my_func(x, y))


# 5. Программа запрашивает у пользователя строку чисел, разделенных пробелом.
# При нажатии Enter должна выводиться сумма чисел. Пользователь может продолжить ввод чисел,
# разделенных пробелом и снова нажать Enter. Сумма вновь введенных чисел будет добавляться
# к уже подсчитанной сумме. Но если вместо числа вводится специальный символ, выполнение
# программы завершается. Если специальный символ введен после нескольких чисел, то вначале
# нужно добавить сумму этих чисел к полученной ранее сумме и после этого завершить программу.

def sum_numbers():
    total_sum = 0
    while True:
        numbers_str = input("Введите числа, разделенные пробелом (или * для завершения): ")
        numbers = numbers_str.split()

        temp_sum = 0
        for num in numbers:
            if num == "*":  # Проверяем, не является ли текущий элемент специальным символом
                print(f"Текущая сумма: {total_sum}. Программа завершена.")
                return  # Выход из функции и завершение программы
            try:
                temp_sum += float(num)  # Попытка преобразовать элемент в число и добавить его к сумме
            except ValueError:
                print(f"{num} не является числом. Оно будет пропущено.")

        total_sum += temp_sum  # Добавляем подсчитанную сумму к общей сумме
        print(f"Текущая сумма: {total_sum}")


sum_numbers()


# 6. Реализовать функцию int_func(), принимающую слово из маленьких латинских букв
# и возвращающую его же, но с прописной первой буквой. Продолжить работу над заданием.
# В программу должна попадать строка из слов, разделенных пробелом.
# Каждое слово состоит из латинских букв в нижнем регистре.
# Сделать вывод исходной строки, но каждое слово должно начинаться с заглавной буквы.
# Необходимо использовать написанную ранее функцию int_func().

def int_func(word):
    """Функция, возвращающая слово с прописной первой буквой."""
    return word.capitalize()


def process_sentence(sentence):
    """Функция, обрабатывающая каждое слово в предложении с помощью функции int_func."""
    # Разбиваем предложение на слова, обрабатываем каждое слово и соединяем обратно в строку
    return ' '.join(int_func(word) for word in sentence.split())


input_sentence = input("Введите строку из слов на латинице в нижнем регистре, разделенных пробелом: ")
print("Результат:", process_sentence(input_sentence))
